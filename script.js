// ====== CONFIG ======
const GOOGLE_SCRIPT_URL = "REPLACE_WITH_YOUR_GOOGLE_APPS_SCRIPT_WEB_APP_URL"; // <-- paste your Apps Script Web App URL
const RAZORPAY_KEY_ID = "rzp_test_1DP5mmOlF5G5ag"; // Demo/Test key (replace with your own)
const AMOUNT_FAMILY = 255; // INR
const AMOUNT_TRAINEE = 2315; // INR

// ====== STATE ======
let paymentSuccess = false;
let paymentId = null;

document.addEventListener("DOMContentLoaded", () => {
  // Declarations text (kept exactly as given)
  const familyDeclText = `(A) Family Service Card Registration
ржЖржорж┐ ржШрзЛрж╖ржгрж╛ ржХрж░ржЫрж┐ ржпрзЗ тАУ
тАв ржЖржорж╛рж░ ржжрзЗржУрзЯрж╛ рж╕ржХрж▓ рждржерзНржп рж╕ржарж┐ржХ ржУ рж╕рждрзНржпред
тАв ржЖржорж┐ ржмрзБржЭрзЗ ржирж┐рзЯрзЗржЫрж┐ ржпрзЗ CGMMA ржПржХржЯрж┐ Section 8 Non-Governmental Company ржПржмржВ ржПрж░ ржХрж╛рж░рзНржпржХрзНрж░ржо рж╕ржорзНржкрзВрж░рзНржгржнрж╛ржмрзЗ рж╕ржВрж╕рзНржерж╛рж░ MOA (Memorandum of Association) ржЕржирзБржпрж╛рзЯрзА ржкрж░рж┐ржЪрж╛рж▓рж┐ржд рж╣рзЯред
тАв ржЖржорж┐ рж╕рзНржмрзАржХрж╛рж░ ржХрж░ржЫрж┐ ржпрзЗ, ржХрзЛржирзЛ ржнрзБрзЯрж╛ рждржерзНржп, ржиржерж┐ ржмрж╛ ржЕржкржмрзНржпржмрж╣рж╛рж░ ржХрж░рж▓рзЗ ржЖржорж╛рж░ рж╕ржжрж╕рзНржпржкржж ржмрж╛рждрж┐рж▓ рж╣рждрзЗ ржкрж╛рж░рзЗ ржПржмржВ ржЖржЗржирж┐ ржмрзНржпржмрж╕рзНржерж╛ ржирзЗржУрзЯрж╛ рж╣ржмрзЗред
тАв ржЖржорж┐ CGMMA-рж░ рж╕рж╛рж░рзНржнрж┐рж╕, рж╕рзБржмрж┐ржзрж╛ ржУ ржжрж╛рзЯрж┐рждрзНржм ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ рж╕ржорзНржорждред

(A) For Members (Family Card Registration)
тАв ржкрзНрж░рждрзНржпрзЗржХ ржкрж░рж┐ржмрж╛рж░ржХрзЗ ржирж┐рж░рзНржзрж╛рж░рж┐ржд рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ тВ╣250 ржЬржорж╛ ржжрж┐рждрзЗ рж╣ржмрзЗ (ржбрзЗржЯрж╛ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ, ржкрзНрж░рж┐ржирзНржЯрж┐ржВ ржУ ржбрж┐рж╕ржмрж╛рж░рзНрж╕ржорзЗржирзНржЯ ржЪрж╛рж░рзНржЬрж╕рж╣)уАВ
тАв 1:10 рж░рзЗрж╢рж┐ржУ рж╕рж┐рж╕рзНржЯрзЗржо ржЕржирзБржпрж╛рзЯрзА ржкрзНрж░рждрзНржпрзЗржХ рж╕ржжрж╕рзНржпржХрзЗ ржХржоржкржХрзНрж╖рзЗ рззрзж ржкрж░рж┐ржмрж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗ рж╕рж╣рж╛рзЯрждрж╛ ржХрж░рждрзЗ рж╣ржмрзЗуАВ
тАв рж╕ржжрж╕рзНржпрж░рж╛ рж╢рзБржзрзБржорж╛рждрзНрж░ CGMMA-рж░ ржЕржлрж┐рж╕рж┐рзЯрж╛рж▓ рж╕рж╛рж░рзНржнрж┐рж╕ ржУ рж╕рзБржмрж┐ржзрж╛ ржнрзЛржЧ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиуАВ
тАв ржХрж╛рж░рзНржб рж╣рж╕рзНрждрж╛ржирзНрждрж░ржпрзЛржЧрзНржп ржирзЯуАВ
тАв рж╕ржжрж╕рзНржпрзЗрж░ ржХрзЛржирзЛ ржнрзБрж▓ рждржерзНржп ржмрж╛ ржЕржкржмрзНржпржмрж╣рж╛рж░ ржкрзНрж░ржорж╛ржгрж┐ржд рж╣рж▓рзЗ ржХрж╛рж░рзНржб ржмрж╛рждрж┐рж▓ рж╣ржмрзЗуАВ
тАв ржХрзЛржорзНржкрж╛ржирж┐ рж╕ржорзЯ рж╕ржорзЯрзЗ ржирзАрждрж┐ ржкрж░рж┐ржмрж░рзНрждржирзЗрж░ ржЕржзрж┐ржХрж╛рж░ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзЗуАВ
тАв рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐, ржбрж╛ржЯрж╛ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ ржлрж┐ ржмрж╛ ржЕржирзНржп ржпрзЗржХрзЛржирзЛ ржлрж┐ ржПржХржмрж╛рж░ ржЬржорж╛ ржжрзЗржУрзЯрж╛рж░ ржкрж░ рждрж╛ ржлрзЗрж░рждржпрзЛржЧрзНржп ржирзЯуАВ
тАв ржЬржорж╛ржХрзГржд ржЪрж╛рж░рзНржЬ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржкрж░рж┐рж╖рзЗржмрж╛ ржУ ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ рж╣ржмрзЗ, ржЕржирзНржп ржХрзЛржирзЛ ржкрзНрж░рзЯрзЛржЬржирзЗ рж╣рж╕рзНрждрж╛ржирзНрждрж░ржпрзЛржЧрзНржп ржирзЯуАВ
тАв ржЕржирж▓рж╛ржЗржи ржкрзЗржорзЗржирзНржЯ ржмрж╛ ржЧрзЗржЯржУржпрж╝рзЗ ржорж╛рж░ржлржд ржлрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛рж░ ржЬржирзНржп, ржкрзНрж░ржжрзЗржпрж╝ ржорзЛржЯ ржЯрж╛ржХрж╛рж░ рж╕рж╛ржерзЗ ржЕрждрж┐рж░рж┐ржХрзНржд рзй% ржкрзЗржорзЗржирзНржЯ ржЧрзЗржЯржУржпрж╝рзЗ рж╕рж╛рж░рзНржнрж┐рж╕ ржЪрж╛рж░рзНржЬ ржкрзНрж░ржпрзЛржЬрзНржп рж╣ржмрзЗ, ржпрж╛ ржЖржмрзЗржжржиржХрж╛рж░рзАржХрзЗржЗ ржмрж╣ржи ржХрж░рждрзЗ рж╣ржмрзЗуАВ
рж░рзЗрж╢рж┐ржУ ржЗржирж╕рзЗржирзНржЯрж┐ржн рж╢рж░рзНрждрж╛ржмрж▓рзА:
тАв ржпржжрж┐ ржЖржорж┐ рж░рзЗрж╢рж┐ржУ рж╕рж┐рж╕рзНржЯрзЗржо 1:10 ржЕржирзБржпрж╛рзЯрзА ржЕржирзНржп ржкрж░рж┐ржмрж╛рж░ржжрзЗрж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗ рж╕рж╣рж╛рзЯрждрж╛ ржХрж░рж┐, рждржмрзЗ ржкрзНрж░рждрж┐ 1:10 рж░рзЗрж╢рж┐ржУ рж╕ржорзНржкрзВрж░рзНржг рж╣ржУрзЯрж╛рж░ ржкрж░ ржХрзЛржорзНржкрж╛ржирж┐ ржЖржорж╛ржХрзЗ тВ╣рзирзлрзж ржЯрж╛ржХрж╛ ржЗржирж╕рзЗржирзНржЯрж┐ржн ржкрзНрж░ржжрж╛ржи ржХрж░ржмрзЗуАВ
тАв ржЖржмрзЗржжржиржХрж╛рж░рзА ржЪрж╛ржЗрж▓рзЗ ржПржХрж╛ржзрж┐ржХржмрж╛рж░ 1:10 рж░рзЗрж╢рж┐ржУ ржХржоржкрзНрж▓рж┐ржЯ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиуАВ ржкрзНрж░рждрж┐ржмрж╛рж░ржЗ рж╕рзЗржЗ ржЕржирзБржкрж╛рждрзЗ ржЗржирж╕рзЗржирзНржЯрж┐ржн ржЧржгржирж╛ рж╣ржмрзЗуАВ
тАв ржПржЗ ржЗржирж╕рзЗржирзНржЯрж┐ржн ржкрзНрж░рждрж┐ ржорж╛рж╕рзЗрж░ рззрзж ржерзЗржХрзЗ рззрзл рждрж╛рж░рж┐ржЦрзЗрж░ ржоржзрзНржпрзЗ ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирж┐рж░рзНржзрж╛рж░рж┐ржд Work System Incentive рж╣рж┐рж╕рж╛ржмрзЗ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗуАВ`;

  const traineeDeclText = `(B) Practice cum Trainee Workers
ржЖржорж┐ ржШрзЛрж╖ржгрж╛ ржХрж░ржЫрж┐ ржпрзЗ тАУ
тАв ржЖржорж┐ CGMMA-рж░ ржЕржзрзАржирзЗ Practice cum Trainee Worker рж╣рж┐рж╕рзЗржмрзЗ рзм ржорж╛рж╕рзЗрж░ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржгржХрж╛рж▓рзАржи ржжрж╛рзЯрж┐рждрзНржм ржкрж╛рж▓ржи ржХрж░ржмуАВ
тАв ржЖржорж┐ ржЬрж╛ржирж┐, ржкрзНрж░ржержо ржзрж╛ржкрзЗ тВ╣2000 ржПржирзНржЯрзНрж░рж┐ ржлрж┐ ржЬржорж╛ ржжрж┐рждрзЗ рж╣ржмрзЗ ржПржмржВ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг рж╢рзЗрж╖рзЗ Signatory Practitioner Charge ржУ Processing Fee (тВ╣7000) ржкрзНрж░ржжрж╛ржи ржХрж░рждрзЗ рж╣ржмрзЗуАВ
тАв ржЖржорж┐ ржмрзБржЭрж┐, ржкрзНрж░рж╢рж┐ржХрзНрж╖ржгржХрж╛рж▓рзЗ ржЕрж░рзНржЬрж┐ржд ржЕржнрж┐ржЬрзНржЮрждрж╛рж░ ржнрж┐рждрзНрждрж┐рждрзЗ ржирж┐рзЯрзЛржЧ ржкрж░рж┐ржХрзНрж╖рж╛рж░ ржЬржирзНржп spot work confirm test ржПрж░ ржорж╛ржзрзНржпржорзЗ ржХрзЛржорзНржкрж╛ржирж┐рж░ рж╕рзНржерж╛рзЯрзА ржХрж░рзНржорзА рж╣рж┐рж╕рж╛ржмрзЗ ржирж┐рзЯрзЛржЧ ржкрж╛ржУрзЯрж╛рж░ рж╕рзБржпрзЛржЧ ржерж╛ржХржмрзЗ ржЕржержмрж╛ ржирж┐ржЬ ржЙржжрзНржпрзЛржЧрзЗ ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░рждрзЗ ржкрж╛рж░ржмуАВ
тАв ржЖржорж┐ CGMMA-рж░ Training Manual, HR Practice Model ржУ Ad Management System-ржПрж░ ржирж┐рзЯржо ржорзЗржирзЗ ржЪрж▓ржмуАВ
тАв ржпржжрж┐ ржЖржорж┐ ржирж┐рзЯржо ржнржЩрзНржЧ ржХрж░рж┐ ржмрж╛ ржжрж╛рзЯрж┐рждрзНржм ржЕржмрж╣рзЗрж▓рж╛ ржХрж░рж┐, рждржмрзЗ ржЖржорж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржмрж╛рждрж┐рж▓ рж╣ржмрзЗ ржПржмржВ ржкрзНрж░ржжрждрзНржд ржЕрж░рзНрже ржлрзЗрж░рждржпрзЛржЧрзНржп рж╣ржмрзЗ ржирж╛уАВ

(B) For Practice cum Trainee Workers
тАв ржкрзНрж░ржержо ржзрж╛ржкрзЗ тВ╣2000 рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ ржкрзНрж░ржжрж╛ржи ржмрж╛ржзрзНржпрждрж╛ржорзВрж▓ржХуАВ
тАв ржкрзНрж░рж╢рж┐ржХрзНрж╖ржгржХрж╛рж▓: рзм ржорж╛рж╕ (Practice cum On-duty Work Period)уАВ
тАв ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ ржЪрж▓рж╛ржХрж╛рж▓рзАржи ржХрж░рзНржорзАржХрзЗ CGMMA-рж░ ржирж┐рж░рзНржзрж╛рж░рж┐ржд HR & Ad Management рж╕рж┐рж╕рзНржЯрзЗржо ржЕржирзБржпрж╛рзЯрзА ржХрж╛ржЬ ржХрж░рждрзЗ рж╣ржмрзЗуАВ
тАв ржкрзНрж░рзНржпрж╛ржХржЯрж┐рж╕ рж╢рзЗрж╖рзЗ ржЕржнрж┐ржЬрзНржЮрждрж╛ рж╕ржиржж ржЪрж╛ржЗрж▓рзЗ тВ╣7000 Signatory Practitioner Charge + Processing Fee ржЬржорж╛ ржжрж┐рждрзЗ рж╣ржмрзЗуАВ
тАв ржЯрзНрж░рзЗржирж┐ржУрзЯрж╛рж░рзНржХрж╛рж░рзНрж╕ ржЪрж▓рж╛ржХрж╛рж▓рзАржи ржХрзЛржорзНржкрж╛ржирж┐рж░ ржкрзНрж░ржХрж▓рзНржкрзЗ ржпрзБржХрзНржд ржерзЗржХрзЗ ржЗржирж╕рзЗржиржЯрж┐ржн/рж╕рзНржЯрж╛ржЗржкрзЗржирзНржб ржЕрж░рзНржЬржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи, рждржмрзЗ рждрж╛ ржХрзЛржорзНржкрж╛ржирж┐рж░ ржирзАрждрж┐рж░ ржУржкрж░ ржирж┐рж░рзНржнрж░рж╢рзАрж▓уАВ
тАв ржЕрж╕ржжрж╛ржЪрж░ржг, рждржерзНржп ржЧрзЛржкржи ржмрж╛ ржирж┐рзЯржо ржнржЩрзНржЧ ржХрж░рж▓рзЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржмрж╛рждрж┐рж▓ рж╣ржмрзЗ ржПржмржВ ржкрзНрж░ржжрждрзНржд ржЕрж░рзНрже ржлрзЗрж░рждржпрзЛржЧрзНржп ржирзЯуАВ
тАв ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг рж╢рзЗрж╖рзЗ ржХрж░рзНржорзА ржЪрж╛ржЗрж▓рзЗ:
тАв spot work confirm test ржПрж░ ржорж╛ржзрзНржпржорзЗ ржХрзЛржорзНржкрж╛ржирж┐рж░ рж╕рзНржерж╛рзЯрзА ржХрж░рзНржорзА рж╣рж┐рж╕рж╛ржмрзЗ ржирж┐рзЯрзЛржЧ ржкрж╛ржУрзЯрж╛рж░ рж╕рзБржпрзЛржЧ ржерж╛ржХржмрзЗ рж╕рзНржерж╛рзЯрзА 
ржирж┐рзЯрзЛржЧрзЗрж░ ржЬржирзНржп ржЖржмрзЗржжржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи, ржЕржержмрж╛ ржирж┐ржЬ ржЙржжрзНржпрзЛржЧрзЗ ржлрзНрж░рзНржпрж╛ржЮрзНржЪрж╛ржЗржЬрж┐ ржоржбрзЗрж▓рзЗ ржХрж╛ржЬ рж╢рзБрж░рзБ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиуАВ
тАв рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐, ржбрж╛ржЯрж╛ ржкрзНрж░рж╕рзЗрж╕рж┐ржВ ржлрж┐, ржЯрзНрж░рзЗржирж┐ржВ ржЪрж╛рж░рзНржЬ ржмрж╛ ржЕржирзНржп ржпрзЗржХрзЛржирзЛ ржлрж┐ ржПржХржмрж╛рж░ ржЬржорж╛ ржжрзЗржУрзЯрж╛рж░ ржкрж░ рждрж╛ ржлрзЗрж░рждржпрзЛржЧрзНржп ржирзЯуАВ
тАв ржЬржорж╛ржХрзГржд ржЪрж╛рж░рзНржЬ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж┐рж░рзНржзрж╛рж░рж┐ржд ржкрж░рж┐рж╖рзЗржмрж╛ ржУ ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛рж░ ржЬржирзНржп ржмрзНржпржмрж╣рж╛рж░ рж╣ржмрзЗ, ржЕржирзНржп ржХрзЛржирзЛ ржкрзНрж░рзЯрзЛржЬржирзЗ рж╣рж╕рзНрждрж╛ржирзНрждрж░ржпрзЛржЧрзНржп ржирзЯуАВ
тАв ржЕржирж▓рж╛ржЗржи ржкрзЗржорзЗржирзНржЯ ржмрж╛ ржЧрзЗржЯржУржпрж╝рзЗ ржорж╛рж░ржлржд ржлрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛рж░ ржЬржирзНржп, ржкрзНрж░ржжрзЗржпрж╝ ржорзЛржЯ ржЯрж╛ржХрж╛рж░ рж╕рж╛ржерзЗ ржЕрждрж┐рж░рж┐ржХрзНржд рзй% ржкрзЗржорзЗржирзНржЯ ржЧрзЗржЯржУржпрж╝рзЗ рж╕рж╛рж░рзНржнрж┐рж╕ ржЪрж╛рж░рзНржЬ ржкрзНрж░ржпрзЛржЬрзНржп рж╣ржмрзЗ, ржпрж╛ ржЖржмрзЗржжржиржХрж╛рж░рзАржХрзЗржЗ ржмрж╣ржи ржХрж░рждрзЗ рж╣ржмрзЗуАВ
ЁЯУМ рж░рзЗрж╢рж┐ржУ ржЗржирж╕рзЗржирзНржЯрж┐ржн рж╢рж░рзНрждрж╛ржмрж▓рзА (ржХрж░рзНржорзА рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи)
тАв ржкрзНрж░рждрж┐ 1:5 рж░рзЗрж╢рж┐ржУ рж╕ржорзНржкрзВрж░рзНржг рж╣рж▓рзЗ, ржХрзЛржорзНржкрж╛ржирж┐ржХрзЗ ржкрзНрж░ржжрзЗрзЯ ржЯрж╛ржХрж╛рж░ рзирзж% ржЗржирж╕рзЗржирзНржЯрж┐ржн ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗуАВ
тАв ржпржжрж┐ ржХрзЛржирзЛ ржорж╛рж╕рзЗ ржкрзВрж░рзНржг 1:5 рж░рзЗрж╢рж┐ржУ рж╕ржорзНржкрзВрж░рзНржг ржирж╛ рж╣рзЯ, рждржмрзЗ ржкрзНрж░рждрж┐ржЯрж┐ ржкрзНрж░рж╛рж░рзНржерзАрж░ ржЬржирзНржп рззрзж% ржЗржирж╕рзЗржирзНржЯрж┐ржн ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗуАВ
тАв ржЖржмрзЗржжржиржХрж╛рж░рзА ржЪрж╛ржЗрж▓рзЗ ржПржХрж╛ржзрж┐ржХржмрж╛рж░ 1:5 рж░рзЗрж╢рж┐ржУ рж╕ржорзНржкржирзНржи ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиуАВ ржкрзНрж░рждрж┐ржмрж╛рж░ рж╕ржорзНржкржирзНржи рж╣ржУрзЯрж╛ рж░рзЗрж╢рж┐ржУ ржмрж╛ ржЖржВрж╢рж┐ржХ рж░рзЗрж╢рж┐ржУ ржЕржирзБржпрж╛рзЯрзА ржЗржирж╕рзЗржирзНржЯрж┐ржн ржЧржгржирж╛ ржХрж░рж╛ рж╣ржмрзЗуАВ
тАв ржЗржирж╕рзЗржирзНржЯрж┐ржн ржорж╛рж╕рж┐ржХржнрж╛ржмрзЗ рззрзж ржерзЗржХрзЗ рззрзл рждрж╛рж░рж┐ржЦрзЗрж░ ржоржзрзНржпрзЗ, ржХрзЛржорзНржкрж╛ржирж┐рж░ Student Employment System ржПрж░ ржЖржУрждрж╛рзЯ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗуАВ`;

  document.getElementById("familyDeclBox").textContent = familyDeclText;
  document.getElementById("traineeDeclBox").textContent = traineeDeclText;

  // Toggle sections by form type
  document.querySelectorAll('input[name="formType"]').forEach(r => {
    r.addEventListener("change", onFormTypeChange);
  });
  onFormTypeChange();

  // Declarations scroll lock
  lockOnScrollToEnd("familyDeclBox", "familyAgree");
  lockOnScrollToEnd("traineeDeclBox", "traineeAgree");

  // Members & Documents
  document.getElementById("addMemberBtn").addEventListener("click", addMemberRow);
  document.getElementById("addDocBtn").addEventListener("click", addDocRow);
  // Start with one doc row
  addDocRow();

  // Payment button
  document.getElementById("payBtn").addEventListener("click", handlePay);

  // Submit
  document.getElementById("cgmmaForm").addEventListener("submit", onSubmit);
});

function onFormTypeChange(){
  const type = getFormType();
  const family = document.getElementById("familySection");
  const trainee = document.getElementById("traineeSection");
  const famDecl = document.getElementById("familyDeclBlock");
  const trnDecl = document.getElementById("traineeDeclBlock");

  if(type === "family"){
    family.style.display = "";
    trainee.style.display = "none";
    famDecl.style.display = "";
    trnDecl.style.display = "none";
  }else{
    family.style.display = "none";
    trainee.style.display = "";
    famDecl.style.display = "none";
    trnDecl.style.display = "";
  }
  evaluateSubmitEnabled();
}

function getFormType(){
  return document.querySelector('input[name="formType"]:checked').value;
}

function lockOnScrollToEnd(boxId, checkboxId){
  const box = document.getElementById(boxId);
  const cb = document.getElementById(checkboxId);
  cb.disabled = true;
  box.addEventListener("scroll", () => {
    const atEnd = Math.ceil(box.scrollTop + box.clientHeight) >= box.scrollHeight;
    if(atEnd){
      cb.disabled = false;
    }
    evaluateSubmitEnabled();
  });
  cb.addEventListener("change", evaluateSubmitEnabled);
}

// ===== Family members =====
function addMemberRow(){
  const wrap = document.getElementById("membersWrap");
  const count = wrap.querySelectorAll(".member-item").length;
  if(count >= 6){
    alert("рж╕рж░рзНржмрзЛржЪрзНржЪ рзм ржЬржи ржкрж░рзНржпржирзНржд ржпрзЛржЧ ржХрж░рж╛ ржпрж╛ржмрзЗред");
    return;
  }
  const idx = count + 1;
  const div = document.createElement("div");
  div.className = "member-item";
  div.innerHTML = `
    <input type="text" placeholder="Name (Member ${idx})" required>
    <input type="text" placeholder="Aadhaar No." required>
    <input type="text" placeholder="Relation / Problem (if any)">
    <input type="file" accept=".pdf,.jpg,.jpeg,.png" required>
    <button type="button" class="btn danger remove">Remove</button>
  `;
  div.querySelector(".remove").addEventListener("click", () => div.remove());
  wrap.appendChild(div);
}

// ===== Documents =====
const DOCS_BY_CAT = {
  Identity: ["Aadhaar Card","Voter ID / EPIC","PAN Card","Passport","Driving License","Employee ID"],
  Address: ["Ration Card","Electricity/Gas/Water Bill","Bank Passbook/Statement","Telephone Bill","Passport","Aadhaar Card"],
  Education: ["Birth Certificate","School Leaving Certificate","School/College Certificate","Marksheet","Training Certificate","Diploma/Degree Certificate"],
  Occupation: ["Employment Card","Experience Certificate","Trade License","Company/Service ID"],
  Financial: ["PAN Card","Bank Passbook","Cheque Book"]
};

function addDocRow(){
  const wrap = document.getElementById("docsWrap");
  const div = document.createElement("div");
  div.className = "doc-item";
  const catOptions = ["","Identity","Address","Education","Occupation","Financial"].map(c => `<option value="${c}">${c||"Select Category"}</option>`).join("");
  div.innerHTML = `
    <select class="doc-cat" required>${catOptions}</select>
    <select class="doc-type" required><option value="">Select Document</option></select>
    <input type="file" class="doc-file" required>
    <button type="button" class="btn danger remove">Remove</button>
  `;
  const catSel = div.querySelector(".doc-cat");
  const typeSel = div.querySelector(".doc-type");
  catSel.addEventListener("change", () => {
    typeSel.innerHTML = `<option value="">Select Document</option>`;
    const val = catSel.value;
    if(DOCS_BY_CAT[val]){
      DOCS_BY_CAT[val].forEach(d => {
        const o = document.createElement("option");
        o.value = d; o.textContent = d;
        typeSel.appendChild(o);
      });
    }
  });
  div.querySelector(".remove").addEventListener("click", () => div.remove());
  wrap.appendChild(div);
}

// ===== Payment (Razorpay Test) =====
function handlePay(){
  const formType = getFormType();
  const amount = (formType === "family") ? AMOUNT_FAMILY : AMOUNT_TRAINEE;
  const name = (document.getElementById("fullName").value || "Applicant").slice(0,50);
  const mobile = document.getElementById("mobile").value || "";
  const email = document.getElementById("email").value || "";

  if(!name || !mobile){
    alert("ржжржпрж╝рж╛ ржХрж░рзЗ Name ржУ Mobile ржкрзВрж░ржг ржХрж░рзБржи, рждрж╛рж░ржкрж░ Pay Now ржХрж░рзБржиред");
    return;
  }

  const options = {
    key: RAZORPAY_KEY_ID,
    amount: amount * 100, // paise
    currency: "INR",
    name: "CGMMA",
    description: (formType === "family") ? "Family Service Card Fee" : "Practice cum Trainee Fee",
    handler: function (response){
      paymentSuccess = true;
      paymentId = response.razorpay_payment_id || null;
      const badge = document.getElementById("payStatus");
      badge.textContent = "PAID (" + (paymentId || "test") + ")";
      badge.classList.add("paid");
      evaluateSubmitEnabled();
    },
    prefill: { name, email, contact: mobile }
  };
  const rzp = new Razorpay(options);
  rzp.open();
}

// ===== Submit Guard =====
function evaluateSubmitEnabled(){
  const formType = getFormType();
  const paidOk = paymentSuccess === true;
  const familyAgree = document.getElementById("familyAgree").checked;
  const traineeAgree = document.getElementById("traineeAgree").checked;

  let agreeOk = (formType === "family") ? familyAgree : traineeAgree;
  let requiredUploadsOk = true;

  if(formType === "family"){
    // family photo
    const famPhoto = document.getElementById("familyPhoto").files[0];
    if(!famPhoto){ requiredUploadsOk = false; }
    // member Aadhaar uploads required
    const memberItems = document.querySelectorAll("#membersWrap .member-item");
    if(memberItems.length === 0){ requiredUploadsOk = false; }
    memberItems.forEach(it => {
      const f = it.querySelector('input[type="file"]').files[0];
      if(!f){ requiredUploadsOk = false; }
    });
  }else{
    const passPhoto = document.getElementById("passportPhoto").files[0];
    const bio = document.getElementById("bioDataFile").files[0];
    if(!passPhoto || !bio){ requiredUploadsOk = false; }
  }

  const canSubmit = paidOk && agreeOk && requiredUploadsOk;
  document.getElementById("submitBtn").disabled = !canSubmit;
}

// watch file/agree changes
["familyPhoto","passportPhoto","bioDataFile"].forEach(id => {
  const el = document.getElementById(id);
  if(el){
    el.addEventListener("change", evaluateSubmitEnabled);
  }
});
document.getElementById("membersWrap").addEventListener("change", (e)=>{
  if(e.target.type === "file") evaluateSubmitEnabled();
});

// ===== Submit handler =====
async function onSubmit(e){
  e.preventDefault();
  evaluateSubmitEnabled();
  if(document.getElementById("submitBtn").disabled){
    alert("Submit guard failed. Ensure payment done, declaration agreed, and required uploads provided.");
    return;
  }

  const formType = getFormType();

  // collect common fields
  const params = {
    formType,
    fullName: getVal("fullName"),
    fatherName: getVal("fatherName"),
    motherName: getVal("motherName"),
    dob: getVal("dob"),
    gender: getVal("gender"),
    aadhaar: getVal("aadhaar"),
    category: getVal("category"),
    mobile: getVal("mobile"),
    email: getVal("email"),
    presentAddress: getVal("presentAddress"),
    permanentAddress: getVal("permanentAddress"),
    sponsorId: getVal("sponsorId"),
    highestEdu: getVal("highestEdu"),
    presentOccupation: getVal("presentOccupation"),
    paymentId: paymentId || "TEST"
  };

  // collect members (family)
  const members = [];
  if(formType === "family"){
    document.querySelectorAll("#membersWrap .member-item").forEach(it => {
      const [nameEl,aadEl,relEl,fileEl] = it.querySelectorAll("input");
      members.push({
        name: nameEl.value || "",
        aadhaar: aadEl.value || "",
        relationOrProblem: relEl.value || ""
      });
    });
  }

  // files: encode as base64
  const filePayloads = [];
  async function pushFile(cat, docType, file){
    if(!file) return;
    const base64 = await readAsBase64(file);
    filePayloads.push({
      category: cat, docType,
      filename: file.name, mimeType: file.type || "application/octet-stream",
      dataBase64: base64
    });
  }

  if(formType === "family"){
    await pushFile("Family","Family Photo", document.getElementById("familyPhoto").files[0]);
    // member aadhaar files
    document.querySelectorAll("#membersWrap .member-item").forEach(async (it,idx) => {
      const f = it.querySelector('input[type="file"]').files[0];
      if(f){
        filePayloads.push({category:"FamilyMember", docType:`Member ${idx+1} Aadhaar`, filename:f.name, mimeType:f.type || "application/octet-stream", dataBase64: null});
      }
    });
  }else{
    await pushFile("Trainee","Passport Photo", document.getElementById("passportPhoto").files[0]);
    await pushFile("Trainee","Bio Data", document.getElementById("bioDataFile").files[0]);
  }

  // documents section
  const docRows = document.querySelectorAll("#docsWrap .doc-item");
  for(const row of docRows){
    const cat = row.querySelector(".doc-cat").value;
    const typ = row.querySelector(".doc-type").value;
    const file = row.querySelector(".doc-file").files[0];
    if(cat && typ && file){
      await pushFile(cat, typ, file);
    }
  }

  // For member aadhaar files, actually read base64 here (separate loop to await properly)
  if(formType === "family"){
    const memberItems = document.querySelectorAll("#membersWrap .member-item");
    for(let i=0;i<memberItems.length;i++){
      const f = memberItems[i].querySelector('input[type="file"]').files[0];
      if(f){
        const base64 = await readAsBase64(f);
        const idx = filePayloads.findIndex(x => x.category==="FamilyMember" && x.docType===`Member ${i+1} Aadhaar` && x.dataBase64===null);
        if(idx>-1){ filePayloads[idx].dataBase64 = base64; }
      }
    }
  }

  const payload = { params, members, files: filePayloads };

  try{
    const res = await fetch(GOOGLE_SCRIPT_URL,{
      method:"POST",
      headers: {"Content-Type":"application/json"},
      body: JSON.stringify(payload)
    });
    const data = await res.json().catch(()=>({status:"ok"}));
    alert("тЬЕ Submitted successfully!");
    console.log("Server response:", data);
    location.reload();
  }catch(err){
    console.error(err);
    alert("тЭМ Submit failed: "+ err.message);
  }
}

function getVal(id){ return (document.getElementById(id)?.value||"").trim(); }

function readAsBase64(file){
  return new Promise((resolve,reject)=>{
    const reader = new FileReader();
    reader.onload = () => {
      const res = reader.result;
      // res is dataURL like "data:...;base64,XXXX"
      const b64 = (res.split(",")[1] || "");
      resolve(b64);
    };
    reader.onerror = reject;
    reader.readAsDataURL(file);
  });
}
